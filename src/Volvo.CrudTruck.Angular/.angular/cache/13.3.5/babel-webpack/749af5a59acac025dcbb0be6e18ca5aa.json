{"ast":null,"code":"import { HttpEvent, HttpHandler, HttpRequest } from '@angular/common/http';\nimport { catchError } from 'rxjs/operators';\nimport { environment } from '@env/environment';\nimport { Logger } from '../logger.service';\nimport * as i0 from \"@angular/core\";\nconst log = new Logger('ErrorHandlerInterceptor');\n/**\r\n * Adds a default error handler to all requests.\r\n */\n\nexport let ErrorHandlerInterceptor = /*#__PURE__*/(() => {\n  class ErrorHandlerInterceptor {\n    intercept(request, next) {\n      return next.handle(request).pipe(catchError(error => this.errorHandler(error)));\n    } // Customize the default error handler here if needed\n\n\n    errorHandler(response) {\n      if (!environment.production) {\n        // Do something with the error\n        log.error('Request error', response);\n      }\n\n      throw response;\n    }\n\n  }\n\n  ErrorHandlerInterceptor.ɵfac = function ErrorHandlerInterceptor_Factory(t) {\n    return new (t || ErrorHandlerInterceptor)();\n  };\n\n  ErrorHandlerInterceptor.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ErrorHandlerInterceptor,\n    factory: ErrorHandlerInterceptor.ɵfac,\n    providedIn: 'root'\n  });\n  return ErrorHandlerInterceptor;\n})();","map":null,"metadata":{},"sourceType":"module"}