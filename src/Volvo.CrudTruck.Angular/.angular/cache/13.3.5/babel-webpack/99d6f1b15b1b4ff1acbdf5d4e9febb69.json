{"ast":null,"code":"import { FormControl } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nexport let FormFieldErrorComponent = /*#__PURE__*/(() => {\n  class FormFieldErrorComponent {\n    constructor() {}\n\n    ngOnInit() {}\n\n    get errorMessage() {\n      if (this.mustShowErrorMessage()) {\n        return this.getErrorMessage();\n      } else {\n        return null;\n      }\n    }\n\n    mustShowErrorMessage() {\n      return this.formControl.invalid && this.formControl.touched;\n    }\n\n    getErrorMessage() {\n      if (this.formControl.errors.required) {\n        return 'Dado Obrigatório';\n      } else if (this.formControl.errors.email) {\n        return 'Formato de E-mail Inválido';\n      } else if (this.formControl.errors.min) {\n        const requiredValue = this.formControl.errors.min.min;\n        return `O valor Mínimo é ${requiredValue} `;\n      } else if (this.formControl.errors.max) {\n        const requiredValue = this.formControl.errors.max.max;\n        return `O valor Máximo é ${requiredValue} `;\n      } else if (this.formControl.errors.minlength) {\n        const requiredLength = this.formControl.errors.minlength.requiredLength;\n        return `Deve Ter no Mínimo ${requiredLength} Caracteres`;\n      } else if (this.formControl.errors.maxlength) {\n        const requiredLength = this.formControl.errors.maxlength.requiredLength;\n        return `Deve Ter no Máximo ${requiredLength} Caracteres`;\n      } else if (this.formControl.errors.mustMatch) {\n        return `As senhas não conferem`;\n      }\n    }\n\n  }\n\n  FormFieldErrorComponent.ɵfac = function FormFieldErrorComponent_Factory(t) {\n    return new (t || FormFieldErrorComponent)();\n  };\n\n  FormFieldErrorComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: FormFieldErrorComponent,\n    selectors: [[\"app-form-field-error\"]],\n    inputs: {\n      formControl: [\"form-control\", \"formControl\"]\n    },\n    decls: 2,\n    vars: 1,\n    consts: [[1, \"text-danger\", \"mt-2\", \"mb-2\"]],\n    template: function FormFieldErrorComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtext(1);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\"\\n    \", ctx.errorMessage, \"\\n  \");\n      }\n    },\n    styles: [\"\"]\n  });\n  return FormFieldErrorComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}