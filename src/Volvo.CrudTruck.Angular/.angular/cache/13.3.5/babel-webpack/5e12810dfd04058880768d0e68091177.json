{"ast":null,"code":"import { Router, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Logger } from '@core';\nimport { CredentialsService } from './credentials.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"./credentials.service\";\nconst log = new Logger('AuthenticationGuard');\nexport let AuthenticationGuard = /*#__PURE__*/(() => {\n  class AuthenticationGuard {\n    constructor(router, credentialsService) {\n      this.router = router;\n      this.credentialsService = credentialsService;\n    }\n\n    canActivate(route, state) {\n      if (this.credentialsService.isAuthenticated()) {\n        return true;\n      }\n\n      log.debug('Not authenticated, redirecting and adding redirect url...');\n      this.router.navigate(['/login'], {\n        queryParams: {\n          redirect: state.url\n        },\n        replaceUrl: true\n      });\n      return false;\n    }\n\n  }\n\n  AuthenticationGuard.ɵfac = function AuthenticationGuard_Factory(t) {\n    return new (t || AuthenticationGuard)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.CredentialsService));\n  };\n\n  AuthenticationGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthenticationGuard,\n    factory: AuthenticationGuard.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthenticationGuard;\n})();","map":null,"metadata":{},"sourceType":"module"}