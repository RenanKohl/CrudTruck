{"ast":null,"code":"import { environment } from '@env/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { of } from 'rxjs';\nimport { CredentialsService } from './credentials.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./credentials.service\";\n/**\r\n * Provides a base for authentication workflow.\r\n *\r\n */\n\nexport let AuthenticationService = /*#__PURE__*/(() => {\n  class AuthenticationService {\n    constructor(http, credentialsService) {\n      this.http = http;\n      this.credentialsService = credentialsService;\n    }\n    /**\r\n     * Authenticates the user.\r\n     * @param context The login parameters.\r\n     * @return The user credentials.\r\n     */\n\n\n    login(context) {\n      return this.http.post(`${environment.serverUrl}/account/login`, context).toPromise();\n    }\n    /**\r\n     * Logs out the user and clear credentials.\r\n     * @return True if the user was logged out successfully.\r\n     */\n\n\n    logout() {\n      // Customize credentials invalidation here\n      return of(true);\n    }\n\n  }\n\n  AuthenticationService.ɵfac = function AuthenticationService_Factory(t) {\n    return new (t || AuthenticationService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.CredentialsService));\n  };\n\n  AuthenticationService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthenticationService,\n    factory: AuthenticationService.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthenticationService;\n})();","map":null,"metadata":{},"sourceType":"module"}