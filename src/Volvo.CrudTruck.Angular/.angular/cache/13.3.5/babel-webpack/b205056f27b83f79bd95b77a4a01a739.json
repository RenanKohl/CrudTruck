{"ast":null,"code":"import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from '@env/environment';\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let TruckService = /*#__PURE__*/(() => {\n  class TruckService {\n    constructor(http) {\n      this.http = http;\n      this.apiPath = `${environment.serverUrl}/trucks`;\n    }\n\n    getAll(token) {\n      return this.http.get(this.apiPath, this.setHeader(token)).pipe(map(res => {\n        return res;\n      }));\n    }\n\n    getById(id, token) {\n      const url = `${this.apiPath}/${id}`;\n      return this.http.get(url, this.setHeader(token)).pipe(map(res => {\n        return res;\n      }));\n    }\n\n    create(resource, token) {\n      return this.http.post(this.apiPath, resource, this.setHeader(token)).pipe(map(res => {\n        return res;\n      }));\n    }\n\n    update(id, resource, token) {\n      const url = `${this.apiPath}/${id}`;\n      return this.http.put(url, resource, this.setHeader(token)).pipe(map(res => {\n        return res;\n      }));\n    }\n\n    delete(id, token) {\n      const url = `${this.apiPath}/${id}`;\n      return this.http.delete(url, this.setHeader(token)).pipe(map(res => {\n        return res;\n      }));\n    }\n\n    setHeader(token) {\n      const httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        })\n      };\n      return httpOptions;\n    }\n\n  }\n\n  TruckService.ɵfac = function TruckService_Factory(t) {\n    return new (t || TruckService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  TruckService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TruckService,\n    factory: TruckService.ɵfac,\n    providedIn: 'root'\n  });\n  return TruckService;\n})();","map":null,"metadata":{},"sourceType":"module"}